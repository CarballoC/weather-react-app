{"version":3,"sources":["components/Weather.js","components/Form.component.js","App.js","index.js"],"names":["MinMaxTemp","max","min","className","Weather","props","city","country","description","weatherIcon","temp","temp_max","temp_min","feels_like","humidity","pressure","Form","error","role","onSubmit","loadweather","type","name","autoComplete","App","getWeather","e","a","console","log","process","REACT_APP_API_KEY","preventDefault","target","elements","value","fetch","api_Call","json","response","setState","sys","calTemperture","main","weather","calPressure","get_WeatherIcon","id","state","undefined","icon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","Math","floor","icons","rangeld","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8cbf7877.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Weather = (props) => {\r\n  return(\r\n    <div className=\"container output\">\r\n      <div className=\"row justify-content-center align-items-center\">\r\n        <div className=\"col-md-12 temperture-display text-center m-2\">\r\n            {props.city?(<h1 className=\"px-4\">\r\n            {props.city}, {props.country}       \r\n          </h1>):null}\r\n          <h3 className=\"px-4\">{props.description}</h3>\r\n          <h1 className=\"px-4 m-5\"><i className={`wi ${props.weatherIcon} display-1`}></i></h1>\r\n          {props.temp?( <h1 className=\"temperture my-2 display-1\">{props.temp}&deg;</h1>):null}     \r\n          {MinMaxTemp(props.temp_max, props.temp_min)}         \r\n        </div>\r\n        <div className=\"row justify-content-center align-item-center\">\r\n        <div className=\"col-md-4 extra-description text-center my-2 p-1\">        \r\n          {props.feels_like?(<h5 className=\"px-4\"><span className=\"extra-description-span\">Feels like</span>{props.feels_like}&deg;</h5>):null}\r\n          {props.humidity?(<h5 className=\"px-4\"><span className=\"extra-description-span\">Humidity</span>{props.humidity} %</h5>):null}\r\n          {props.pressure?(<h5 className=\"px-4\"><span className=\"extra-description-span\">Pressure</span>{props.pressure} inHg</h5>):null}          \r\n        </div>\r\n        </div>\r\n        \r\n      </div>      \r\n    </div>\r\n  )\r\n}\r\nfunction MinMaxTemp(max, min){\r\n  if(max && min){\r\n    return(\r\n      <h3>\r\n        <span className=\"px-4\">Max {max}&deg;</span>\r\n        <span className=\"px-4\">Min {min}&deg;</span>\r\n      </h3>\r\n  \r\n    )\r\n  }\r\n}\r\n\r\nexport default Weather;","import React from 'react'\r\n\r\nconst Form = props =>{\r\n  return(\r\n    <div className=\"container form\">\r\n      <h1 className=\"heading mt-5\">Check the Weather</h1>\r\n      <div>{props.error ? error() : null}</div>\r\n     <form onSubmit={props.loadweather}>\r\n      <div className=\"row justtify-content-center align-items-center\">\r\n          <div className=\"col-md-12 text-center search-bar mt-5\">\r\n            <input type=\"text\" className=\"form--control\" name=\"city\" autoComplete=\"off\"/>         \r\n          </div>        \r\n          <div className=\"col-md-12 text-end\">\r\n            <button className=\"btn btn-light get-weather mt-2\">Get Weather</button>        \r\n          </div>\r\n        </div>\r\n     </form>\r\n    </div>\r\n  )\r\n} \r\nfunction error(){ \r\n  return(\r\n    <div className=\"alert alert-danger mx-5\" role=\"alert\">Please Enter City and Country</div>\r\n  )\r\n}\r\nexport default Form\r\n","\r\nimport Weather from './components/Weather';\r\nimport 'weather-icons/css/weather-icons.css';\r\nimport './App.css';\r\nimport React from 'react';\r\nimport Form from './components/Form.component';\r\n\r\n// const SECRET_KEY = REACT_APP_SECRET_KEY;\r\n\r\n\r\nclass App extends React.Component{\r\n  constructor(){\r\n    super();\r\n  this.state={\r\n    city:undefined,\r\n    country:undefined,\r\n    icon:undefined,\r\n    main:undefined,\r\n    description:\"\",\r\n    temp:undefined,\r\n    temp_max:undefined,\r\n    temp_min:undefined,\r\n    humidity:undefined,\r\n    error:false\r\n  };\r\n    \r\n    this.weatherIcon={\r\n      Thunderstorm:\"wi-thunderstorm\",\r\n      Drizzle:\"wi-sleet\",\r\n      Rain:\"wi-storm-showers\",\r\n      Snow:\"wi-snow\",\r\n      Atmosphere:\"wi-fog\",\r\n      Clear:\"wi-day-sunny\",\r\n      Clouds:\"wi-day-fog\"\r\n    }\r\n  }\r\n\r\n  calTemperture(temp){\r\n    let fahrenheit = Math.floor((temp-273.15) * 1.8 + 32);\r\n    return fahrenheit;\r\n  }\r\n  calPressure(pressure){\r\n    let inHg = Math.floor(pressure * 0.0295301);\r\n    return inHg;\r\n  }\r\n  get_WeatherIcon(icons, rangeld){\r\n    switch(true){\r\n      case rangeld >= 200 && rangeld <=232:\r\n        this.setState({icon:this.weatherIcon.Thunderstorm});\r\n        break;\r\n        case rangeld >= 300 && rangeld <=321:\r\n        this.setState({icon:this.weatherIcon.Drizzle});\r\n        break;\r\n        case rangeld >= 500 && rangeld <=531:\r\n        this.setState({icon:this.weatherIcon.Rain});\r\n        break;\r\n        case rangeld >= 600 && rangeld <=622:\r\n        this.setState({icon:this.weatherIcon.Snow});\r\n        break;\r\n        case rangeld >= 701 && rangeld <=781:\r\n        this.setState({icon:this.weatherIcon.Atmosphere});\r\n        break;\r\n        case rangeld === 800:\r\n        this.setState({icon:this.weatherIcon.Clear});\r\n        break;\r\n        case rangeld >= 801 && rangeld <=804:\r\n        this.setState({icon:this.weatherIcon.Clouds});\r\n        break;\r\n        default:\r\n          this.setState({icon:this.weatherIcon.Clouds});\r\n    }\r\n  }\r\n  \r\n  getWeather = async (e) => {    \r\n    console.log(process.env.REACT_APP_API_KEY);\r\n    e.preventDefault();\r\n    const city = e.target.elements.city.value;\r\n    // const country = e.target.elements.country.value;\r\n    const api_Call = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_SECRET_KEY}`);\r\n    const response = await api_Call.json();\r\n    console.log(response);\r\n    this.setState({\r\n      city:`${response.name}`,\r\n      country: response.sys.country,\r\n      temp:this.calTemperture(response.main.temp),     \r\n      temp_max:this.calTemperture(response.main.temp_max),\r\n      temp_min:this.calTemperture(response.main.temp_min),\r\n      description:response.weather[0].description,\r\n      feels_like:this.calTemperture(response.main.feels_like),\r\n      humidity:response.main.humidity,\r\n      pressure:this.calPressure(response.main.pressure),    \r\n      \r\n    })\r\n    this.get_WeatherIcon(this.weatherIcon, response.weather[0].id);\r\n    \r\n  };  \r\n  render(){\r\n    return(\r\n      <div className=\"App\">\r\n        <Form loadweather={this.getWeather} error={this.state.error}/>\r\n        <Weather city={this.state.city} country={this.state.country}temp={this.state.temp}temp_max={this.state.temp_max}temp_min={this.state.temp_min}description={this.state.description}feels_like={this.state.feels_like}humidity={this.state.humidity}pressure={this.state.pressure}weatherIcon={this.state.icon}/>\r\n      </div>\r\n    );\r\n    \r\n  }     \r\n  \r\n}\r\n\r\n\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')  \r\n);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}